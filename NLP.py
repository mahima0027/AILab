# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1tpPFYxf88zO3nNzdnJ-W4OiI1ZeqJYEn
"""

text="Let's start Learning NLP"
text=text.upper()
text

text="Let's start Learning NLP"
text=text.lower()
text

import nltk
def simple_stemmer(text):
  ps=nltk.porter.PorterStemmer()
  text=' '.join([ps.stem(word) for word in text.split()])
  return text
simple_stemmer("My system keeps crashing his crashed yesterday,our crashes daily ")

import nltk
nltk.download('averaged_perceptron_tagger_eng')
text="You are learning NLP first lecture"
nltk.pos_tag(text.split())

import nltk
nltk.download('averaged_perceptron_tagger_eng')
text="you are attending first class at bmsce"
nltk.pos_tag(text.split())

import spacy
nlp=spacy.load("en_core_web_sm")
doc=nlp('she saw a bear,she was afraid.')
for word in doc:
  print(word,word.pos_)

### Removing Spaces
import re #(re=regression)
text="converting line   with   many  spaces   to     line with single space      words."
text=re.sub(' +',' ',text)
text

#Removing Digits
text="Being no 1 in exam is more important than on being no 3 with far ways"
text=re.sub('0-9',' ',text)
text





#Removing stopwords
from nltk.corpus import stopwords
nltk.download('stopwords')
text="stopword is one of the is important topic"
def remove_stopwords(text):
  stop_words=set(stopwords.words('english'))
  filtered_sentence=[]
  for word in text.split():
    if word not in stop_words:
      filtered_sentence.append(word)
  return " ".join(filtered_sentence)
text=remove_stopwords(text)
print(text)

from nltk.corpus import stopwords
nltk.download('stopwords')
text=input(" ")
text=text.upper()
text
def remove_stopwords(text):
    stop_words=('THE','IS','OF','OR','TO')
    filtered_sentence=[]
    for word in text.split():
     if word not in stop_words:
      filtered_sentence.append(word)
    return " ".join(filtered_sentence)
text=remove_stopwords(text)
print(text)
for i in range(len(text)):
  if i%2==0:
    print(text[i].upper())
  else:
    print(text[i].lower())